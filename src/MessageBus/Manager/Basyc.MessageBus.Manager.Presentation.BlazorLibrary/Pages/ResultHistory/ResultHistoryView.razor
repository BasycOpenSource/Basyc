@using Basyc.MessageBus.Manager.Application
@using Basyc.MessageBus.Manager.Application.ResultDiagnostics
@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Pages.ResultHistory.ResultHistoryItem
@inject IRequestDiagnosticsRepository ResultLoggingManager;


<historyView>
	@if (RequestContexts is not null)
	{
		var resultCounter = 0;
		@foreach (var requestContext in RequestContexts)
		{
			if (ResultLoggingManager.TryGetDiagnostics(requestContext.TraceId, out var diagnosticsContext) is false)
			{
				<div>cant get daignostic context</div>
			}
			else
			{
				<item>
					<ResultHistoryItemView RequestContext="requestContext" OrderIndex="++resultCounter"/>
				</item>
			}
		}
	}
	else
	{
		@:empty history
	}
</historyView>

@code {

	[Parameter]
	public List<MessageRequest>? RequestContexts { get; set; }

	private MessageRequest? selectedRequestResults;

	[Parameter]
	public MessageRequest? SelectedRequestResults
	{
		get => selectedRequestResults;
		set
		{
			if (value == selectedRequestResults) return;
			selectedRequestResults = value;
		}
	}

}