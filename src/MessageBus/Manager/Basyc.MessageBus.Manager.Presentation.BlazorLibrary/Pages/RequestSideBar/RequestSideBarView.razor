@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Pages.Requests
<reqeustSideBarView>
    @*    <heading>
    <headingText>
    <RequestTag RequestType="@RequestTagTypeHelper.FromRequestType(SelectedRequestViewModel.RequestInfo.RequestType)" />
    @SelectedRequestViewModel.RequestInfo.RequestDisplayName
    </headingText>
    <headingDivider />
    </heading>*@


    @if (SelectedRequestViewModel is null)
    {
        <ghostLabel>
            Select request
        </ghostLabel>
    }
    else
    {
        <table class="paramTable paddingContainer">
            @for (int i = 0; i < SelectedRequestViewModel.RequestInfo.Parameters.Count; i++)
            {
                var index = i;
                var paramInfo = SelectedRequestViewModel.RequestInfo.Parameters[index];
                var paramValue = SelectedRequestViewModel.ParameterValues[index];
                var isPrimitive = paramInfo.Type.IsPrimitive || paramInfo.Type.IsArray || paramInfo.Type == typeof(string);
                <tr>
                    <td>
                        <paramType class="paramType-isPrimitive-@isPrimitive">@paramInfo.TypeDisplayName</paramType>
                        <paramLabel>@paramInfo.ParameterDisplayName </paramLabel>
                    </td>
                </tr>
                <tr class="paramRow">
                    <td>
                        <paramInput class="inputBorder">
                            <input class="paramTextBox" @bind-value="@SelectedRequestViewModel.ParameterValues[index]" />
                        </paramInput>
                    </td>
                </tr>
            }
        </table>
        @if (SelectedRequestViewModel.RequestInfo.Parameters.Count == 0)
        {
            <ghostLabel>
                This message does not have paramters
            </ghostLabel>
        }
        <div class="paddingContainer">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="()=>Requested.InvokeAsync(SelectedRequestViewModel)">
                SEND
            </MudButton>
        </div>
    }
</reqeustSideBarView>

@code {
    [Parameter] public RequestItemViewModel SelectedRequestViewModel { get; set; }
    [Parameter] public EventCallback<RequestItemViewModel> Requested { get; set; }

}
