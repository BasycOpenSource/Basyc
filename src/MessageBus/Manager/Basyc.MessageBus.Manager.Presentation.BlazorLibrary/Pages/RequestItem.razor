@using Basyc.MessageBus.Manager.Application
@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Components.RequestTag
<div>
	<requestItemComponent class="@BorderClass">
		<MudExpansionPanel Class="@BackgroundClass" Dense="true" DisableGutters="true" HideIcon="true">
			<TitleContent>
				<requestHeading>
					<headingSection>
						<RequestTagView RequestType="@RequestTagTypeHelper.FromRequestType(RequestItemViewModel.RequestInfo.RequestType)"/>
						<requestName>@RequestItemViewModel.RequestInfo.RequestDisplayName </requestName>
					</headingSection>
					<MudDivider Vertical="true" FlexItem="true"/>
					<headingSection>
						@if (RequestItemViewModel.RequestInfo.HasResponse)
						{
							<RequestTagView RequestType="RequestTagType.Response"/>
							<requestName>@RequestItemViewModel.RequestInfo.ResponseDisplayName </requestName>
						}

						@if (RequestItemViewModel.RequestContext != null && RequestItemViewModel.IsLoading is false)
						{
							var latencyClass = $"latency--status--{RequestItemViewModel.RequestContext.State.ToString()}";
							<latency class="@latencyClass">@Math.Ceiling(RequestItemViewModel.RequestContext.Duration.TotalMilliseconds) ms</latency>
						}
						@if (RequestItemViewModel.IsLoading)
						{
							<latency>
								<MudProgressCircular Style="height: 18px; width: 18px; padding: -5px; margin: -5px;" Color="Color.Default" Indeterminate="true"/>
							</latency>
						}
					</headingSection>
				</requestHeading>
			</TitleContent>
			<ChildContent>
				<requestBody class="@RequestBodyClass">
					<bodySection>
						<table class="paramTable">
                            @*TODO SHOULD BE FIXED*@
@*						@for (var i = 0; i < RequestItemViewModel.RequestInfo.Parameters.Count; i++)
							{
								var index = i;
								var paramInfo = RequestItemViewModel.RequestInfo.Parameters[index];
								var paramValue = RequestItemViewModel.ParameterValues[index];
								var isPrimitive = paramInfo.Type.IsPrimitive || paramInfo.Type.IsArray || paramInfo.Type == typeof(string);
								<tr class="paramRow">
									<td>
										<paramLabel>@paramInfo.ParameterDisplayName </paramLabel>
									</td>
									<td>
										<paramInput class="inputBorder">
											<paramType class="paramType-isPrimitive-@isPrimitive">@paramInfo.TypeDisplayName</paramType>
											<input class="paramTextBox" @bind-value="@RequestItemViewModel.ParameterValues[index]"/>
										</paramInput>
									</td>
								</tr>
							}
*@

						</table>
						<br/>
						<button class="sendRequestButton" disabled="@RequestItemViewModel.IsLoading" @onclick="() => SendMessage(RequestItemViewModel.RequestInfo)">send</button>
					</bodySection>
					<MudDivider Vertical="true" FlexItem="true"/>
					<bodySection>
						@if (RequestItemViewModel.IsLoading)
						{
							<loadingContainer>
								<MudProgressCircular Color="Color.Default" Indeterminate="true"/>
							</loadingContainer>
						}
						else
						{
							var hasError = RequestItemViewModel.RequestContext.State == RequestResultState.Failed;
							<inputContainer>

								@if (RequestItemViewModel.RequestContext != null && RequestItemViewModel.RequestInfo.HasResponse && hasError is false)
								{
									//https://www.jqueryscript.net/other/Beautiful-JSON-Viewer-Editor.html
									var hasErrorClass = hasError ? "inputBorder--error" : "";
									<textarea readonly disabled="@hasError" class="responseText inputBorder @hasErrorClass">@RequestItemViewModel.RequestContext.Response</textarea>
								}
								@if (RequestItemViewModel.RequestContext != null && RequestItemViewModel.IsLoading is false && hasError)
								{
									<errorMessage>@RequestItemViewModel.RequestContext.ErrorMessage</errorMessage>
								}
							</inputContainer>
						}
					</bodySection>
				</requestBody>
			</ChildContent>
		</MudExpansionPanel>
	</requestItemComponent>
</div>

@code
{
	private string RequestType => RequestItemViewModel.RequestInfo.RequestType.ToString().ToLower();
	private string BorderClass => "requestItem__border--" + RequestType;
	private string BackgroundClass => "background--" + RequestType;
	private string RequestBodyClass => "requestBody--" + RequestType;

}
