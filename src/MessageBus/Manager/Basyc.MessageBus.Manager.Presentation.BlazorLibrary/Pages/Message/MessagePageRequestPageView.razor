@using Basyc.MessageBus.Manager.Application;
@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Components.DurationMap.Horizontal
@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Components.LogWindow
@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Shared.Helpers.Html;
@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Shared.Helpers;
@inherits BasycReactiveBlazorComponentBase<MessagePageRequestPageViewModel, MessageRequest>
<messagePageRequestPageView>
    <BasycSpaceBorder Size="SpacerSize.Big" StretchHeight="true">
        <infoRow>
            <infoSection>
                <BasycHeading Size="HeadingSize.H3">
                    Results
                </BasycHeading>
                <BasycSpaceLine Direction="SpaceLineDirection.Horizontal" Visible="false" Start="SpaceLineSize.Small" />
                <infoTable>
                    <labels>
                        <label>Order Index</label>
                        <label>Started</label>
                        <label>State</label>
                        <label>Duration</label>
                        <label>Trace ID</label>
                    </labels>
                    <BasycSpaceLine Direction="SpaceLineDirection.Vertical" Visible="false" Start="SpaceLineSize.Medium" />
                    <values>
                        <value>@MessageRequest.OrderIndex</value>
                        <value>@MessageRequest.CreationTime.ToString("hh:mm:ss")</value>
                        <value>@MessageRequest.State.ToString()</value>
                        <value>@Html.Time(MessageRequest.Duration)</value>
                        <value>@MessageRequest.TraceId.ToString()</value>
                    </values>
                </infoTable>
            </infoSection>
            <BasycSpaceLine Direction="SpaceLineDirection.Vertical" Visible="false" Start="SpaceLineSize.Big" />
            <inputBox>
                @ResponseResultConverter.CreateInputOverview(MessageRequest.RequestInput.Parameters)
            </inputBox>
            <arrow>
                |>
            </arrow>
            <inputBox>
                @if (MessageRequest.State == RequestResultState.Started)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="100%" Width="100%" />
                }
                else
                {
                    <textValue>
                        @if (MessageRequest.State == RequestResultState.Completed)
                        {
                            if (MessageRequest.RequestInput.MessageInfo.HasResponse)
                            {
                                @MessageRequest.Response
                            }
                            else
                            {
                                <ghostLabel>
                                    Result does not have an output
                                </ghostLabel>
                            }
                        }
                        @if (MessageRequest.State == RequestResultState.Failed)
                        {
                            @MessageRequest.ErrorMessage
                        }
                    </textValue>
                }
            </inputBox>
        </infoRow>
        <BasycSpaceLine Direction="SpaceLineDirection.Horizontal" Visible="false" Start="SpaceLineSize.Big" />

        <MudTabs Elevation="2" TabPanelClass="mudTabs" KeepPanelsAlive="true">
            <ChildContent>
                <MudTabPanel Text="Result">
                    <inputBox>
                        @if (MessageRequest.State == RequestResultState.Started)
                        {
                            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="100%" Width="100%" />
                        }
                        else
                        {
                            <textValue>
                                @if (MessageRequest.State == RequestResultState.Completed)
                                {
                                    if (MessageRequest.RequestInput.MessageInfo.HasResponse)
                                    {
                                        @MessageRequest.Response
                                    }
                                    else
                                    {
                                        <ghostLabel>
                                            Result does not have an output
                                        </ghostLabel>
                                    }
                                }
                                @if (MessageRequest.State == RequestResultState.Failed)
                                {
                                    @MessageRequest.ErrorMessage
                                }
                            </textValue>
                        }
                    </inputBox>
                </MudTabPanel>
                <MudTabPanel Text="Traces">
                    <HorizontalDurationMapView RequestContext="MessageRequest" />
                </MudTabPanel>
                <MudTabPanel Text="Logs" >
                    <LogWindowView DiagnosticsContext="MessageRequest.Diagnostics" />
                </MudTabPanel>
            </ChildContent>

        </MudTabs>
    </BasycSpaceBorder>
</messagePageRequestPageView>


@code {
    public MessageRequest MessageRequest { get; private set; } = null!;
    public override void OnVisit(MessageRequest queryParams)
    {
        MessageRequest = queryParams;
    }
}
