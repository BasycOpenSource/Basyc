@using Basyc.MessageBus.Manager.Application;
@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Components
@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Components.LogIcon
@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Shared.Helpers.Htmls;
@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Shared.Navigation;
@using Basyc.ReactiveUi.Blazor;
@using Microsoft.Extensions.Logging;
@using MudBlazor.Utilities;
@inherits BasycReactiveBlazorComponentBase<SidebarHistoryItemViewModel>

<sidebarHistoryItemView class="@sidebarHistoryItemViewClass">
    <BasycSpaceBorder Size="SpacerSize.Small">
        <MudStack Row="true" AlignItems="AlignItems.Stretch">
            <index>
                #@Index
            </index>
            <itemBody>
                <MudStack Spacing="0">
                    <headingRow class="@headingRowClass">
                        @ViewModel.State
                        @Html.Time(ViewModel.Duration)
                    </headingRow>
                    <loggingRow>
                        <LogIconView LogLevel="LogLevel.Information" /> @ViewModel.LogsInformationCount
                        <BasycSpaceLine Start="SpaceLineSize.Small" End="SpaceLineSize.Small" Visible="false" Direction="SpaceLineDirection.Vertical" />
                        <LogIconView LogLevel="LogLevel.Warning" /> @ViewModel.LogsWarningCount
                        <BasycSpaceLine Start="SpaceLineSize.Small" End="SpaceLineSize.Small" Visible="false" Direction="SpaceLineDirection.Vertical" />
                        <LogIconView LogLevel="LogLevel.Error" /> @ViewModel.LogsErrorCount
                    </loggingRow>
                </MudStack>
            </itemBody>
        </MudStack>
    </BasycSpaceBorder>

</sidebarHistoryItemView>

@code {

    [Parameter, EditorRequired] public NavigationService NavigationService { get; set; } = null!;
    [Parameter, EditorRequired] public MessageRequest MessageRequest { get; set; } = null!;
    [Parameter, EditorRequired] public int Index { get; set; }

    private string sidebarHistoryItemViewClass = "";
    private string headingRowClass => new CssBuilder()
            .AddClass("headingRowClass--started", ViewModel.State == RequestResultState.Started)
            .AddClass("headingRowClass--completed", ViewModel.State == RequestResultState.Completed)
            .AddClass("headingRowClass--failed", ViewModel.State == RequestResultState.Failed)
            .Build();

    protected override void OnParametersSet()
    {
        ViewModel.MessageRequest = MessageRequest;
        ViewModel.NavigationService = NavigationService;
        base.OnParametersSet();

        sidebarHistoryItemViewClass = new CssBuilder()
             .AddClass("sidebarHistoryItemView--selected", ViewModel.IsSelected)
             .Build();
    }

}
