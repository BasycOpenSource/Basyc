@using Basyc.MessageBus.Manager.Application.Building;
@using Basyc.MessageBus.Manager.Application.Requesting;
@using Basyc.MessageBus.Manager.Application;
@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Shared.Helpers.Htmls;
@using Basyc.MessageBus.Manager.Presentation.BlazorLibrary.Shared.Navigation;
@using Basyc.ReactiveUi.Blazor;
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using ReactiveUI.Blazor;
@using ReactiveUI;
@using System.Reactive.Disposables;

@inherits BasycReactiveBlazorComponentBase<SidebarHistoryViewModel>
<sidebarHistoryView>
    <heading>
        <BasycSpaceBorder Size="SpacerSize.Medium" SizeBottom="SpacerSize.Small">
            <BasycHeading Size="HeadingSize.H4">
                History
            </BasycHeading>
        </BasycSpaceBorder>
    </heading>
    <requests>
        <Virtualize TItem="MessageRequest" Context="messageRequest" Items="@messages">
            <ItemContent>
                <historyItem @onclick="()=>Click(messageRequest)">
                    <SidebarHistoryItemView Index="@messageRequest.OrderIndex"
                                            MessageRequest="@messageRequest"
                                            NavigationService="NavigationService" />
                </historyItem>
            </ItemContent>
            <Placeholder>
                <p>
                    Please wait.
                </p>
            </Placeholder>
        </Virtualize>
    </requests>
</sidebarHistoryView>


@code {
    private ICollection<MessageRequest> messages => ViewModel.History.Reverse().ToArray();
    [Parameter, EditorRequired] public MessageInfo MessageInfo { get; set; } = null!;
    [Parameter, EditorRequired] public NavigationService NavigationService { get; set; } = null!;

    protected override void OnParametersSet()
    {
        ViewModel.MessageInfo = MessageInfo;
        base.OnParametersSet();
    }

    private void Click(MessageRequest messageRequest) => NavigationService.GoTo<MessagePageRequestPageView, MessagePageRequestPageViewModel, MessageRequest>(messageRequest);
}
