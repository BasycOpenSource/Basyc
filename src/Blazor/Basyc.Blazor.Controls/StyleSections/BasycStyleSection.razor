@namespace Basyc.Blazor.Controls
@using System.Collections.ObjectModel;
@using Basyc.Blazor.Controls.StyleSections;
@using BlazorComponentUtilities;
@using System.Diagnostics.CodeAnalysis;
<basycStyleSection class="@styleSection.CssClass">
        <style>
            @if(styleSection is not null)
            {
                @(styleSection.Style)
            }
        </style>
    @ChildContent
</basycStyleSection>

@code {

    public static void AddStyleSection(StyleDefinition styleSection)
    {
        styleSections.Add(styleSection);
    }


    protected override void OnInitialized()
    {
        styleSections.CollectionChanged += (s, a) =>
        {
            this.StateHasChanged();
        };
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        var styleSectionPeak = styleSections.FirstOrDefault(x => x.Name == SectionName);
        if (styleSectionPeak is null)
            if (ThrowWhenStyleSectioNotfound)
                throw new Exception($"Style section '{SectionName}' not found");
            else
                return;
        styleSection = styleSectionPeak;
    }

    private static ObservableCollection<StyleDefinition> styleSections = new();
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    private StyleDefinition styleSection = null!;


    [Parameter, EditorRequired]
    public string SectionName { get; set; } = null!;

    [Parameter]
    public bool ThrowWhenStyleSectioNotfound { get; set; }
}
